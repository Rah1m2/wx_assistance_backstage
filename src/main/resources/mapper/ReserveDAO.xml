<?xml version="1.0" encoding="UTF8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wx.main.DAO.ReserveDAO">

    <select id="getAStudentInfoBySortId" resultType="com.wx.main.POJO.Student">
        select distinct
          sort_id,user_mission_id,user_openid,user_name,user_avatarUrl,user_score
        from
          a_student_info natural join user_info
        group by
          user_openid, sort_id
        having
          sort_id=#{sort_id}
        and
          user_openid!=#{user_openid}
    </select>

    <select id="getREZInfoOfCurByUserOpenid" parameterType="java.lang.String" resultType="com.wx.main.POJO.Student">
        select
            mission_id user_mission_id, user_avatarUrl,user_name, a_student_info.user_openid, contact_detail, mission_reserve_info.sort_id, a_student_info.sort_id, user_name, sort_name, isReserved
        from
            a_student_info
            natural join
            mission_reserve_info
            natural join
            sort_info
            natural join
            user_info
        where
            mission_reserve_info.customer_user_openid=#{user_openid}
            and
            a_student_info.sort_id=mission_reserve_info.sort_id
    </select>

    <select id="getCurAcceptedREZInfoByUserOpenid" resultType="com.wx.main.VO.RedisCustomer">
        select
            sort_name,user_avatarUrl customer_user_avatarUrl,user_name customer_user_name, sort_id, mission_reserve_info.customer_user_openid user_openid, isReserved
        from
            mission_reserve_info
        natural join
            sort_info
        inner join
            user_info
        where
            mission_reserve_info.user_openid=#{user_openid}
        and
            mission_reserve_info.customer_user_openid = user_info.user_openid
    </select>

    <select id="filterAStudentInfo" resultType="com.wx.main.POJO.Student">
        select distinct sort_id,user_mission_id,user_openid,user_name,user_avatarUrl,user_score from
          a_student_info natural join user_info natural join mission_reserve_info
        group by
          user_openid
        having
          COUNT(user_openid) &gt; 1
    </select>

    <select id="DisableONLY_FULL_GROUP_BY" resultType="java.util.Map">
        SET sql_mode = (SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
    </select>

    <insert id="insertReserveInfo" parameterType="com.wx.main.POJO.Reserve">
        insert into mission_reserve_info (mission_id, sort_id, user_openid, customer_user_openid, isReserved, deadline) values (#{mission_id}, #{sort_id}, #{user_openid}, #{customer_user_openid}, 1, #{deadline})
    </insert>
    
    <delete id="delReservation" parameterType="java.lang.String">
        delete from mission_reserve_info where mission_id=#{mission_id}
    </delete>

</mapper>
