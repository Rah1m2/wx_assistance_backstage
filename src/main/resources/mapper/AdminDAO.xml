<?xml version="1.0" encoding="UTF8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wx.main.DAO.AdminDAO">

    <select id="getAdminByAcPw" parameterType="java.util.Map" resultType="java.util.Map">
        select * from admin where admin_account=#{user_account} and admin_password=#{user_password}
    </select>

    <select id="getUserByQuery" parameterType="java.lang.String" resultType="com.wx.main.POJO.User">
        <choose>
            <when test="query == 'ALL'.toString() or query == 'Banned'.toString()">
                select * from user_info
            </when>
            <otherwise>
                select distinct user_openid, user_name, user_gender, user_language, user_country from user_info
            </otherwise>
        </choose>
            <if test="query == 'AStu'.toString()">
                natural join a_student_info
            </if>
            <if test="query == 'Banned'.toString()">
                natural join banned_user_list
            </if>
    </select>

    <insert id="insertAdmin" parameterType="java.util.Map">
        insert into admin (admin_account, admin_password) values (#{admin_account}, #{admin_password})
    </insert>

    <select id="getReservations" resultType="com.wx.main.VO.StudentReserve">
        SELECT
          mission_id, sort_name, user_name, mission_reserve_info.user_openid, mission_reserve_info.customer_user_openid
        FROM
          mission_reserve_info
        NATURAL JOIN
          sort_info
        INNER JOIN
          user_info
        WHERE
          user_info.user_openid = mission_reserve_info.user_openid
    </select>

    <select id="getReservationsPart2" resultType="com.wx.main.VO.StudentReserve">
      SELECT
        mission_id, user_name customer_user_name,mission_reserve_info.user_openid, mission_reserve_info.customer_user_openid
      FROM
        mission_reserve_info
      INNER JOIN
        user_info
      WHERE
        user_info.user_openid = mission_reserve_info.customer_user_openid
    </select>

    <delete id="deleteReservation" parameterType="java.lang.Integer">
        delete from mission_reserve_info where mission_id=#{mission_id}
    </delete>

    <insert id="insertSort" parameterType="java.lang.String">
        insert into sort_info (sort_id, sort_name) VALUES (0, #{addSortName})
    </insert>

    <delete id="deleteSort" parameterType="java.lang.Integer">
        delete from sort_info where sort_id=#{sort_id}
    </delete>

    <update id="updateSort" parameterType="java.util.Map">
        update sort_info set sort_name=#{sort_name} where sort_id=#{sort_id}
    </update>

    <insert id="barAccount" parameterType="java.lang.String">
        insert into banned_user_list (user_openid, banned_reason) values
        <choose>
            <when test="banned_reason == null">
                (#{user_openid}, 'default')
            </when>
            <otherwise>
                (#{user_openid}, #{banned_reason})
            </otherwise>
        </choose>
    </insert>

    <delete id="unbarAccount" parameterType="java.lang.String">
        delete from banned_user_list where user_openid=#{user_openid}
    </delete>

    <select id="getBarredInfo" parameterType="java.lang.String" resultType="com.wx.main.POJO.User">
        select * from banned_user_list where user_openid=#{user_openid}
    </select>

    <delete id="deleteAStuByQuery" parameterType="java.lang.String">
        delete from a_student_info where user_openid=#{user_openid}
        <if test="sort_id!=null">
            and sort_id=#{sort_id}
        </if>
    </delete>

</mapper>